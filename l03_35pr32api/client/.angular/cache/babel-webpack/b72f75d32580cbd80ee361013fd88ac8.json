{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let TokenInterceptor = /*#__PURE__*/(() => {\n  class TokenInterceptor {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n\n    intercept(req, next) {\n      if (this.auth.isAuthenticated()) {\n        req = req.clone({\n          setHeaders: {\n            Authorization: this.auth.getToken()\n          }\n        });\n      }\n\n      return next.handle(req).pipe(catchError(error => this.handleAuthError(error)));\n    }\n\n    handleAuthError(error) {\n      if (error.status === 401) {\n        this.router.navigate(['/login'], {\n          queryParams: {\n            sessionFailed: true\n          }\n        });\n      }\n\n      return throwError(error);\n    }\n\n  }\n\n  TokenInterceptor.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  TokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n  return TokenInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}