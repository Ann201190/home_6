{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MaterialService } from '../services/material.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction RegisterComponent_span_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email \\u043D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_span_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 email \\u0430\\u0434\\u0440\\u0435\\u0441\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, RegisterComponent_span_9_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵtemplate(2, RegisterComponent_span_9_span_2_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls[\"email\"].errors == null ? null : ctx_r0.form.controls[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls[\"email\"].errors == null ? null : ctx_r0.form.controls[\"email\"].errors[\"email\"]);\n  }\n}\n\nfunction RegisterComponent_span_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_span_14_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u0431\\u043E\\u043B\\u044C\\u0448\\u0435 \", ctx_r5.form.controls[\"password\"].errors == null ? null : ctx_r5.form.controls[\"password\"].errors[\"minlength\"][\"requiredLength\"], \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \", ctx_r5.form.controls[\"password\"].errors == null ? null : ctx_r5.form.controls[\"password\"].errors[\"minlength\"][\"actualLength\"], \" \");\n  }\n}\n\nfunction RegisterComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, RegisterComponent_span_14_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵtemplate(2, RegisterComponent_span_14_span_2_Template, 2, 2, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls[\"password\"].errors == null ? null : ctx_r1.form.controls[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.form.controls[\"password\"].errors == null ? null : ctx_r1.form.controls[\"password\"].errors[\"minlength\"]) && (ctx_r1.form.controls[\"password\"].errors == null ? null : ctx_r1.form.controls[\"password\"].errors[\"minlength\"][\"requiredLength\"]));\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"invalid\": a0\n  };\n};\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)])\n      });\n    }\n\n    onSubmit() {\n      console.log(this.form.value);\n      this.aSub = this.auth.register(this.form.value).subscribe(() => {\n        // MaterialService.toast('Register done!!!')\n        this.router.navigate(['/login'], {\n          queryParams: {\n            registered: true\n          }\n        }); //console.log('Register done!!!!')\n      }, () => {\n        MaterialService.toast('Register error!!!'); ///console.log('Register error!!!')\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.aSub) {\n        this.aSub.unsubscribe();\n      }\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 18,\n    vars: 10,\n    consts: [[1, \"auth-block\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-content\"], [1, \"card-title\"], [1, \"input-field\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\", 3, \"ngClass\"], [\"for\", \"email\"], [\"class\", \"helper-text red-text\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"id\", \"password\", \"type\", \"password\", 3, \"ngClass\"], [\"for\", \"password\"], [1, \"card-action\"], [\"type\", \"submit\", 1, \"modal-action\", \"btn\", \"waves-effect\", 3, \"disabled\"], [1, \"helper-text\", \"red-text\"], [4, \"ngIf\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, RegisterComponent_span_9_Template, 3, 2, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, RegisterComponent_span_14_Template, 3, 2, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵtext(17, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.form.controls[\"email\"].invalid && ctx.form.controls[\"email\"].touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"email\"].invalid && ctx.form.controls[\"email\"].touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.form.controls[\"password\"].invalid && ctx.form.controls[\"password\"].touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls[\"password\"].invalid && ctx.form.controls[\"password\"].touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.form.disabled);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgClass, i4.NgIf],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}